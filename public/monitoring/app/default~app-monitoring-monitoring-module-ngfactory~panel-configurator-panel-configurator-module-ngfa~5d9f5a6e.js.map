{"version":3,"sources":["webpack:///./node_modules/uuid/index.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/v1.js","webpack:///./node_modules/uuid/v4.js","webpack:///./src/app/core/services/shortcut.service.ts","webpack:///./src/app/monitoring/panel-configurator/store/actions/panel-increation.action.ts","webpack:///./src/app/monitoring/panel-configurator/store/reducers/index.ts","webpack:///./src/app/monitoring/panel-configurator/store/reducers/panel-increation.reducer.ts","webpack:///./src/app/monitoring/panel-configurator/store/selectors/panel-increation.selector.ts","webpack:///./src/app/monitoring/shared/store/selectors/panel.selector.ts"],"names":[],"mappings":";;;;;;;;;AAAA,SAAS,mBAAO,CAAC,uCAAM;AACvB,SAAS,mBAAO,CAAC,uCAAM;;AAEvB;AACA;AACA;;AAEA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACjCA,UAAU,mBAAO,CAAC,yDAAW;AAC7B,kBAAkB,mBAAO,CAAC,iEAAmB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AC5GA,UAAU,mBAAO,CAAC,yDAAW;AAC7B,kBAAkB,mBAAO,CAAC,iEAAmB;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BmE;AAC1B;;;AAoBzC;IAWI,yBAC8B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","file":"default~app-monitoring-monitoring-module-ngfactory~panel-configurator-panel-configurator-module-ngfa~5d9f5a6e.js","sourcesContent":["var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT, EventManager } from '@angular/platform-browser';\nimport { Observable, timer } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n\n\nexport type KeyboardBinding = {\n    element: any,\n    key: string,\n    description: string,\n    view: string\n}\n\n// Type for the Secription View about our shortcuts\nexport type KeyBindingDescription = {\n    key: string,\n    description: string,\n    view: string\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ShortcutService {\n    /*\n    * This is a Service that offers to bind a keyboard Shortcut.\n    * It also keeps track of subscribe shortcuts so the user can see the\n    * shortcuts hin can use\n    */\n\n    default: Partial<KeyboardBinding> = {\n        element: this.document\n    }\n    constructor(\n        @Inject(DOCUMENT) private document: Document,\n        private eventManager: EventManager\n    ) { }\n\n    private keyBindings: Array<KeyBindingDescription> = [];\n\n    /* Method to get an Observable that fires whenever a desired key is pressed\n    * @param binding that contains the Element of choice (mostly document anyway) the key and some metadata\n    * @returns observable that fires whenever a key is pressed\n    */\n    bindShortcut(binding: Partial<KeyboardBinding>) {\n        const mBinding = { ...this.default, ...binding };\n        const event = `keydown.${mBinding.key}`;\n\n        // Set Description for Shortcut overview\n        const kbDescription = { ...binding, element: undefined } as KeyBindingDescription\n        this.keyBindings = [...this.keyBindings, kbDescription];\n\n\n        return new Observable(observer => {\n            const callback = (e) => {\n                // e.preventDefault();\n                observer.next(e);\n            };\n            const listenReference = this.eventManager.addEventListener(mBinding.element, event, callback);\n            return () => {\n                // kills the actionlistener\n                listenReference();\n                this.delteDescription(kbDescription);\n            };\n        });\n    }\n\n    // private Methode that removes shortcut when the observable is unsubscribed\n    private delteDescription(description: KeyBindingDescription) {\n        this.keyBindings = this.keyBindings.filter(k => k != description);\n    }\n}\n","import { Action } from '@ngrx/store';\nimport { Chart } from '../../../shared/model/chart';\nimport { CfAuthScope } from '../../../chart-configurator/model/cfAuthScope';\nimport { Panel } from '../../../shared/model/panel';\n\nexport const ADD_CHART_TO_PANEL = '[Panel Configurator] Add Chart to Panel';\nexport const DELETE_CHART_IN_PANEL =\n  '[Panel Configurator] Delete Chart in Panel';\n\nexport const SET_NAME = '[Panel Configurator] Set Name';\nexport const SET_DESCRIPTION = '[Panel Configurator] Set Description';\nexport const SET_AUTH_SCOPE = '[Panel Configurator] Set AuthScope';\nexport const FLUSH_STATE = '[Panel Configurator] Flush State';\n\nexport const SET_STATE_FOR_UPDATE = '[Panel Configurator] Set State for Update';\n\n\n\nexport class AddChartToPanel implements Action {\n  readonly type = ADD_CHART_TO_PANEL;\n  constructor(public payload: Chart) { }\n}\nexport class DeleteChartInPanel implements Action {\n  readonly type = DELETE_CHART_IN_PANEL;\n  constructor(public payload: string) { }\n}\nexport class SetName implements Action {\n  readonly type = SET_NAME;\n  constructor(public payload: string) { }\n}\nexport class SetDescription implements Action {\n  readonly type = SET_DESCRIPTION;\n  constructor(public payload: string) { }\n}\nexport class FlushState implements Action {\n  readonly type = FLUSH_STATE;\n}\nexport class SetAuthScope implements Action {\n  readonly type = SET_AUTH_SCOPE;\n  constructor(public payload: CfAuthScope) { }\n}\nexport class SetStateForUpdate implements Action {\n  readonly type = SET_STATE_FOR_UPDATE;\n  constructor(public payload: Panel) { }\n}\n\nexport type PanelIncreationAction =\n  | AddChartToPanel\n  | DeleteChartInPanel\n  | SetName\n  | SetDescription\n  | FlushState\n  | SetAuthScope\n  | SetStateForUpdate;\n","import { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\nimport * as fromPanelInCreation from './panel-increation.reducer';\n\nexport interface PanelConfiguratorState {\n  panelIncreation: fromPanelInCreation.PanelIncreationState;\n}\n\nexport const reducers: ActionReducerMap<PanelConfiguratorState> = {\n  panelIncreation: fromPanelInCreation.reducer\n};\n\nexport const getPanelState = createFeatureSelector<PanelConfiguratorState>(\n  'panel'\n);\n","import { CfAuthScope } from '../../../chart-configurator/model/cfAuthScope';\nimport * as fromPanelIncreation from '../actions/panel-increation.action';\nimport * as uuid from 'uuid';\nimport { ChartInPanel } from '../../../model/chart-in-panel';\n\n\nexport interface PanelIncreationState {\n  id?: string;\n  charts: { [id: string]: ChartInPanel };\n  name: string;\n  description: string;\n  authScope: CfAuthScope;\n  onEdit: boolean;\n}\nexport const initialState: PanelIncreationState = {\n  charts: {},\n  name: '',\n  description: '',\n  authScope: {} as CfAuthScope,\n  onEdit: false\n};\n\nexport function reducer(\n  state = initialState,\n  action: fromPanelIncreation.PanelIncreationAction\n) {\n  switch (action.type) {\n    case fromPanelIncreation.ADD_CHART_TO_PANEL: {\n      return {\n        ...state,\n        charts: { ...state.charts, [uuid.v4()]: { oreder: undefined, chart: action.payload, size: undefined } }\n      };\n    }\n    case fromPanelIncreation.DELETE_CHART_IN_PANEL: {\n      const charts = { ...state.charts };\n      delete charts[action.payload];\n      return {\n        ...state,\n        charts\n      };\n    }\n    case fromPanelIncreation.SET_NAME: {\n      return {\n        ...state,\n        name: action.payload\n      };\n    }\n    case fromPanelIncreation.SET_DESCRIPTION: {\n      return {\n        ...state,\n        description: action.payload\n      };\n    }\n    case fromPanelIncreation.SET_AUTH_SCOPE: {\n      return {\n        ...state,\n        authScope: action.payload\n      };\n    }\n    case fromPanelIncreation.FLUSH_STATE: {\n      return initialState;\n    }\n    case fromPanelIncreation.SET_STATE_FOR_UPDATE: {\n      const { id, authScope, charts, name, description } = action.payload\n      // deconstruct from ChartsInPanel Datatype to normal Chart Datatype\n      const newCharts = charts.reduce<{ [id: string]: ChartInPanel }>(\n        (prev, curr, index, arr) => {\n          if (index == 0) {\n            return { [uuid.v4()]: curr }\n          }\n          return { ...prev, [uuid.v4()]: curr }\n        }, {}\n      )\n      return {\n        id,\n        authScope,\n        charts: newCharts,\n        name,\n        description,\n        onEdit: true\n      }\n    }\n  }\n  return state;\n}\n\nexport const getCharts = (state: PanelIncreationState) => state.charts;\n","import { createSelector } from '@ngrx/store';\nimport { getPanelState, PanelConfiguratorState } from '../reducers/index';\nimport {\n  getCharts,\n  PanelIncreationState\n} from '../reducers/panel-increation.reducer';\nimport { Panel } from '../../../shared/model/panel';\nimport { Chart } from '../../../shared/model/chart';\nimport { ChartInPanel } from '../../../model/chart-in-panel';\n\nexport const getPanelIncreationState = createSelector(\n  getPanelState,\n  (state: PanelConfiguratorState) => state.panelIncreation\n);\n\nexport const getPanelIncreationCharts = createSelector(\n  getPanelIncreationState,\n  getCharts\n);\n\nexport const getPanelNameAndDescription = createSelector(\n  getPanelIncreationState,\n  (state) => {\n    return { name: state.name, description: state.description };\n  }\n)\n\nexport const buildFunctionalPanel = createSelector<\n  PanelIncreationState,\n  PanelIncreationState,\n  Panel\n>(\n  getPanelIncreationState,\n  (state: PanelIncreationState) => {\n    state.charts;\n    const charts = constructChartInPanel(deconstructCharts(state.charts));\n    let panel = {\n      authScope: state.authScope,\n      charts,\n      name: state.name,\n      description: state.description\n    } as Panel;\n    panel = state.id ? { ...panel, id: state.id } : panel;\n    return panel;\n  }\n);\n\nexport const panelReadyForBuild = createSelector(\n  getPanelIncreationState,\n  state =>\n    state.authScope.orgId &&\n    state.authScope.spaceId &&\n    !!state.name\n);\n\nexport const getPanelOnEdit = createSelector(\n  getPanelIncreationState,\n  state => state.onEdit\n);\n\nfunction deconstructCharts(obj: any): ChartInPanel[] {\n  return Array.from(new Map(Object.entries(obj))[Symbol.iterator]()).map(\n    k => k[1] as ChartInPanel\n  );\n}\nfunction constructChartInPanel(arr: ChartInPanel[]) {\n  return arr.map((chart, order) => {\n    const size = chart.size ? chart.size : 100;\n    return { order, chart: chart.chart, size } as ChartInPanel;\n  });\n}\n\n","import { createSelector } from '@ngrx/store';\nimport { getSharedModuleState, SharedModuleState } from '../reducers/index';\nimport { getPanels } from '../reducers/panel.reducer';\nimport { PanelVm } from '../../model/panel.vm';\nimport { Panel } from '../../model/panel';\n\nexport const getPanelState = createSelector(\n  getSharedModuleState,\n  (state: SharedModuleState) => {\n    return state.panels;\n  }\n);\n\nexport const getAllPanels = createSelector(\n  getPanelState,\n  getPanels\n);\n\nexport const getPanelById = createSelector(\n  getAllPanels,\n  (panels: Array<Panel>, id: string) => {\n    return panels.filter(k => k.id == id)[0];\n  }\n);\n\nexport const getPanelViewModelById = createSelector(\n  getAllPanels,\n  (panels, id: string) => {\n    const panel = panels.filter(k => k.id == id)[0];\n    if (!panel || !panel.charts) {\n      return {};\n    }\n    const charts: Chart[][] = panel.charts.reduce(\n      (prev, next, i, arr) => {\n        if (i == 0) {\n          return [[next]];\n        } else {\n          // The Max Size per Row ist 12, so we create a new line wenever the line is filled\n          const arr = [...prev[prev.length - 1]];\n          const size = [...arr].reduce((prev, curr) => (prev += curr.size), 0);\n          if (size + next.size > 12) {\n            return [...prev, [next]];\n          } else {\n            return [...prev.splice(prev.length - 2), [...arr, next]];\n          }\n        }\n      },\n      [[]]\n    );\n    return { ...panel, charts } as PanelVm;\n  }\n);\n"],"sourceRoot":""}