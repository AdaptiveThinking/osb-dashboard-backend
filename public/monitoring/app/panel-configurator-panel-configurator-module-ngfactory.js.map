{"version":3,"sources":["webpack:///./src/app/monitoring/panel-configurator/container/panel-editor/panel-editor.component.html","webpack:///./src/app/monitoring/panel-configurator/container/panel-editor/panel-editor.component.ts","webpack:///./src/app/monitoring/panel-configurator/panel-configurator-routing.module.ts","webpack:///./src/app/monitoring/panel-configurator/panel-configurator.module.ts"],"names":[],"mappings":"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","file":"panel-configurator-panel-configurator-module-ngfactory.js","sourcesContent":["<div class=\"sb-container\">\n\n    \n        <div class=\"sb-textfields\">\n            <h2 *ngIf=\"!onEdit\">Create a new Panel</h2>\n\n            <h2 *ngIf=\"onEdit\">Edit {{name}} here</h2>\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <label>Name</label>\n                    <input class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"name\" required>\n                </div>\n                <div class=\"col\">\n                    <label>Description</label>\n                    <input class=\"form-control\" type=\"text\" name=\"description\" [(ngModel)]=\"description\" required>\n                </div>\n            </div>\n        </div>\n        <div class=\"sb-buttons\">\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"cancel()\">cancel</button>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"save(false)\" [disabled]=\"!(name && description && authScope)\">save</button>\n        </div>\n        <div class=\"sb-button-right\" *ngIf=\"onEdit\">\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"save(true)\">delete</button>\n        </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\nimport { Chart } from '../../../shared/model/chart';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { getCharts } from '../../../shared/store/selectors/chart.selector';\nimport { PanelIncreationState } from '../../store/reducers/panel-increation.reducer';\nimport * as panelAction from '../../store/actions/panel-increation.action';\nimport * as panelSelectors from '../../store/selectors/panel-increation.selector';\nimport { CfAuthScope } from 'app/monitoring/chart-configurator/model/cfAuthScope';\nimport { CfAuthParameterService } from '../../../shared/services/cfauth-param.service';\nimport { BindingsState } from '../../../shared/store/reducers/binding.reducer';\nimport { ChartModelState } from '../../../shared/store/reducers/chart.reducer';\nimport { LoadCharts } from '../../../shared/store/actions/chart.actions';\nimport { Panel } from '../../../shared/model/panel';\nimport { map, filter, switchMap, debounceTime } from 'rxjs/operators';\nimport { PanelState } from '../../../shared/store/reducers/panel.reducer';\nimport { SavePanel } from 'app/monitoring/shared/store/actions/panel.action';\nimport { getPanelState } from '../../../shared/store/selectors/panel.selector';\nimport { take } from 'rxjs/internal/operators';\nimport { Router } from '@angular/router';\nimport { LoadPanels, UpdatePanel, DeletePanel } from '../../../shared/store/actions/panel.action';\nimport { ChartInPanel } from '../../../model/chart-in-panel';\nimport { ShortcutService } from '../../../../core/services/shortcut.service';\n\n@Component({\n  selector: 'sb-panel-editor',\n  templateUrl: './panel-editor.component.html',\n  styleUrls: ['./panel-editor.component.scss']\n})\nexport class PanelEditorComponent implements OnInit {\n  public charts$: Observable<Array<Chart>>;\n  public chartsInPanel$: Observable<{ [id: string]: ChartInPanel }>;\n  public name: string;\n  public description: string;\n  public onEdit: boolean;\n\n  public authScope: CfAuthScope;\n  private cfAuthParams: CfAuthParameterService;\n\n  constructor(\n    private chartStore: Store<ChartModelState>,\n    private panelStore: Store<PanelIncreationState>,\n    private panelModelStore: Store<PanelState>,\n    private router: Router,\n    bindingStore: Store<BindingsState>,\n    cfAuthParams: CfAuthParameterService,\n    private shortcut: ShortcutService\n  ) {\n    this.cfAuthParams = cfAuthParams.construct(bindingStore);\n  }\n\n  ngOnInit() {\n    this.chartStore.dispatch(new LoadCharts());\n    this.charts$ = this.chartStore.select(getCharts);\n    this.chartsInPanel$ = this.panelStore.select(\n      panelSelectors.getPanelIncreationCharts\n    );\n    this.panelStore.select(panelSelectors.getPanelNameAndDescription).subscribe(k => {\n      this.name = k.name;\n      this.description = k.description;\n    });\n    this.panelStore.select(panelSelectors.getPanelOnEdit).subscribe(k => {\n      this.onEdit = k;\n    });\n    this.charts$.subscribe(k => console.log(k));\n    this.cfAuthParams.createCfAuthScope().subscribe(k => (this.authScope = k));\n\n    this.shortcut.bindShortcut({\n      key: \"Enter\",\n      description: \"Trigger Save Button\",\n      view: \"Panel Editor View\"\n    }).subscribe(k => {\n      this.save(false);\n    });\n  }\n\n  save(deleteFlag: boolean) {\n    this.panelStore.dispatch(new panelAction.SetName(this.name));\n    this.panelStore.dispatch(new panelAction.SetDescription(this.description));\n    this.panelStore.dispatch(new panelAction.SetAuthScope(this.authScope));\n    this.panelStore\n      .select(panelSelectors.panelReadyForBuild)\n      .pipe(\n        take(1),\n        filter((k: boolean) => k),\n        switchMap(k =>\n          this.panelStore.select(panelSelectors.buildFunctionalPanel)\n        ),\n        switchMap((panel: Panel) => {\n          if (panel.id) {\n            if (!deleteFlag) {\n              this.panelModelStore.dispatch(new UpdatePanel(panel));\n            } else {\n              this.panelModelStore.dispatch(new DeletePanel(panel.id));\n            }\n          } else {\n            this.panelModelStore.dispatch(new SavePanel(panel));\n          }\n          return this.panelModelStore.select(getPanelState);\n        }),\n        debounceTime(100),\n        filter(k => !k.panelSaveing),\n        take(1),\n        map(k => k.panelSaved)\n      )\n      .subscribe((k: boolean) => {\n        if (k) {\n          this.panelStore.dispatch(new panelAction.FlushState());\n          this.router.navigate(['/monitoring']);\n          this.panelModelStore.dispatch(new LoadPanels());\n        } else {\n          alert('An Error occured. Check if you have included everything we need');\n        }\n      });\n  }\n  cancel() {\n    this.panelStore.dispatch(new panelAction.FlushState());\n    this.router.navigate(['/monitoring']);\n  }\n}\n","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { PanelEditorComponent } from './container/panel-editor/panel-editor.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component: PanelEditorComponent\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PanelConfiguratorRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { StoreModule } from '@ngrx/store';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgbAccordionModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { containerComponents } from './container/indext';\nimport { components } from './components';\nimport { reducers } from './store/reducers';\nimport { PanelConfiguratorRoutingModule } from './panel-configurator-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    StoreModule.forFeature('panel', reducers),\n    SharedModule,\n    NgbAccordionModule,\n    DragDropModule,\n    PanelConfiguratorRoutingModule\n  ],\n  declarations: [...containerComponents, ...components]\n})\nexport class PanelConfiguratorModule {}\n"],"sourceRoot":""}